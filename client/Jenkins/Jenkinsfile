#!/usr/bin/env groovy

pipeline {
    agent any

    tools {
        nodejs 'Node_Zup'
    }

    stages {
    stage('Install Node.js') {
        //echo "Entrei aqui"
        steps {
            script {
                def nodeVersion = '14.17.6'
                def nodeHome = tool 'Node_Zup' ?: ''
                def nodeInstallDir = "${WORKSPACE}/nodejs"

               // echo("Antes do IF  ${nodeVersion} ${nodeHome} ${nodeInstallDir} ")

                if (nodeHome == '') {
                    echo "Node.js não encontrado. Baixando e instalando..."

                    // Baixa o Node.js
                    sh "curl -sL https://nodejs.org/dist/v${nodeVersion}/node-v${nodeVersion}-linux-x64.tar.xz -o node.tar.xz"

                    // Extrai o Node.js
                    sh "tar -xf node.tar.xz -C ${nodeInstallDir}"

                    // Adiciona o Node.js ao PATH
                    env.PATH = "${nodeInstallDir}/bin:${env.PATH}"

                    // Configura o Node.js
                    sh 'node --version'
                    sh 'npm --version'
                } else {
                    echo "Node.js já instalado em: ${nodeHome}"
                }
            }
        }
    }

        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    sh 'npm install'
                }
            }
        }

        stage('Deploy to EC2 - Front 1') {
            steps {
                script {
                    //def remoteHost = '<IP-DA-EC2>'
                    def remoteHost = '44.206.238.230'
                    // def remoteUser = 'ec2-user'
                    def remoteUser = 'ec2-user'
                    //def keyPath = '/path/to/private/key.pem'
                    def keyPath =  '/var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem'
                    //def remoteDir = '~/apl-back-zup'
                    def remoteDir = '/home/ec2-user/version-prod-front/client'

                    // Altera as permissões da chave
                   // sh "chmod 600 ${keyPath}"

                   sh """
                   ssh -o StrictHostKeyChecking=no -i /var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem ${remoteUser}@${remoteHost} '"cd ${remoteDir} && git fetch && git pull"'
                   """

//sh "ssh -i /var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem ${remoteUser}@${remoteHost} '-c \"cd ${remoteDir} && git fetch && git pull\"'"
                    //  sh "ssh -i ${keyPath} ${remoteUser}@${remoteHost} 'sudo systemctl restart myapp'"
                }
            }
        }

//         stage('Deploy to EC2 - Front 2') {
//             steps {
//                 script {
//                     //def remoteHost = '<IP-DA-EC2>'
//                     def remoteHost = '3.87.160.16'
//                     // def remoteUser = 'ec2-user'
//                     def remoteUser = 'ec2-user'
//                     //def keyPath = '/path/to/private/key.pem'
//                     def keyPath =  '/var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem'
//                     //def remoteDir = '~/apl-back-zup'
//                     def remoteDir = '/root/apl-back-zup'

//                     // Altera as permissões da chave
//                    // sh "chmod 600 ${keyPath}"

//                    sh """
//                    ssh -o StrictHostKeyChecking=no -i /var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem ${remoteUser}@${remoteHost} 'sudo su - -c "cd ${remoteDir} && git fetch && git pull"'
//                    """

// //sh "ssh -i /var/lib/jenkins/workspace/apl-back-zup/tokens/token.pem ${remoteUser}@${remoteHost} 'sudo su - -c \"cd ${remoteDir} && git fetch && git pull\"'"
//                     //  sh "ssh -i ${keyPath} ${remoteUser}@${remoteHost} 'sudo systemctl restart myapp'"
//                 }
//             }
//         }
    }
}
